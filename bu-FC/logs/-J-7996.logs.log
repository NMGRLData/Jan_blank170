do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000194072723389
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.78813934326e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.41345977783e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.08374786377e-05
executed snippet estimated_duration=0.0, duration=0.0021960735321
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000137090682983
executed snippet estimated_duration=4.0, duration=0.000963926315308
Script duration 556.0
Run total estimated duration= 557.000
run duration: 0:09:17
doing event level: 2
14:53:03 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4967310640
close session 4967310640
$$$$$ Clearing conditionals
adding conditionals CDDtrip
extract conditionals from file. /Users/jan/PychronDev/scripts/conditionals/CDDtrip.yaml
no attr for this modification cd={'extraction_str': '', 'attr': '', 'mapper': '', 'use_termination': False, 'start_count': 0, 'nskip': 0, 'window': 0, 'frequency': 1, 'teststr': '', 'action': 'Skip Next Run', 'ntrips': 1, 'use_truncation': False}
adding cancelation attr="Ar36" test="Ar36<0.002" start="60"
no attr for this truncation cd={'mapper': '', 'window': 0, 'frequency': 1, 'attr': '', 'teststr': '', 'start_count': 0, 'ntrips': 1}
adding termination attr="Ar40" test="Ar40>5000.0" start="1"
Invalid conditional kind="pre_run_terminations"
no attr for this action cd={'mapper': '', 'attr': '', 'start_count': 0, 'window': 0, 'frequency': 1, 'teststr': '', 'action': None, 'ntrips': 1}
Invalid conditional kind="post_run_terminations"
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bu-FC-J-7996
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bu-FC-J-7996
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
14:53:04 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.17699,0.05485,-0.04491,-0.01695,0.07586,0.00316
14:53:04 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
14:53:04 -- ******* Pre Extraction Check Passed *******
=================================================================================
14:53:04 -- stopping status monitor
stop 4939519376
Status monitor stopped
Status monitor finished
14:53:05 -- starting status monitor
start 4939519376
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
set states for children of D. state=False
handle state [('D', False)]
update switch state D False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
start extraction
do extraction
Analysis started at 14:53:07.186237
Extraction Started jan_co2.py
14:53:07 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12a13cd10>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.6968460083e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.10758972168e-05
executed snippet estimated_duration=120.0, duration=0.00180792808533
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.88622283936e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.0489609241486
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000104904174805
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
14:53:07 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
14:53:08 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=3
14:53:09 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
14:53:09 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
14:53:10 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
14:53:10 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
14:53:11 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
close name=--- desc=CO2 Laser to Felix
checking ownership. requestor=129.138.12.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
14:53:11 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
14:53:12 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=5.29438400269
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '') {}
setting motor "beam" to 
is blank. not heating
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=3
14:53:12 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.0790920258
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
State checksums do not match. Local:337817015 Remote:-1452036699
State checksum failed
set states for children of C. state=False
set states for children of B. state=True
handle state [('C', False), ('B', True)]
update switch state C False args=() kw={'refresh': True} ncanvase=3
update switch state B True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
Join finished
block finished. duration 30.0547361374
executed snippet estimated_duration=180.0, duration=65.9301989079
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 1
Extraction Finished
14:54:13 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
14:54:13 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.258926936459
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.8255 5.8791 5.9922 6.1654 6.2308 6.3936
Ar39     5.7247 5.7714 5.8846 6.0515 6.1159 6.2801
Ar36     5.4023 5.4404 5.5480 5.7103 5.7709 5.9312
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.370811206739
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=bu-FC-J analysis type=blank_unknown
Measurement Started jan_unknown400_120.py
14:54:13 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09675
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.147042666178
GetParameter Source Current Readback ===>> 553.996337667094
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/85/6d1aa8-3e45-49ea-8231-e2493e728ec7.h5
flush and close file /Users/jan/PychronDev/data/isotopes/85/6d1aa8-3e45-49ea-8231-e2493e728ec7.h5
testing...
no interpolation path defined
executed snippet estimated_duration=568.532928, duration=0.000174999237061
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57074999]
H1 map mass to dac 39.9624 >> 5.87914
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.8791053783) on H1
setting magnet DAC
current  : 5.879106
requested: 5.879105
Delta Dac: 0.000001
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8791053783 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
Equilibration Started
14:54:14 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x1538267d0>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x1549b43b0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x1549b4f50>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=3
14:54:14 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
set states for children of B. state=False
handle state [('B', False)]
update switch state B False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
State checksums do not match. Local:1601233651 Remote:1554461685
State checksum failed
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=3
14:54:18 -- OPEN   VALVE-R (Jan Inlet)
set_time_zero () {}
equilibrating for 12.0sec
sniff (12.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/85/6d1aa8-3e45-49ea-8231-e2493e728ec7.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
14:54:30 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
14:54:31 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
14:54:31 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000153064727783
executed snippet estimated_duration=4.0, duration=0.00192594528198
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.00019097328186
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
waiting for write to finish
measurement finished
estimated time: 12.583 actual time: :12.708
flush and close file /Users/jan/PychronDev/data/isotopes/85/6d1aa8-3e45-49ea-8231-e2493e728ec7.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
GetIndicatorState R ===>> False
change switch state (True, True)
set "H2" to "('average', 'SEM')"
update switch state R False args=() kw={} ncanvase=3
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
14:54:31 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/85/6d1aa8-3e45-49ea-8231-e2493e728ec7.h5
measuring signal. ncounts=400
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
"signal" increment series count="2" fit count="1" regressing="True"
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
14:54:32 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
starting measurement
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6964841710590572}"
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
set states for children of U. state=True
handle state [('U', True)]
update switch state U True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
14:54:33 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
14:54:34 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -0.12297980694120883}"
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
14:54:35 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -18.776134374409732}"
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
14:54:35 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
14:54:36 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -4.528362636976678}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -0.2811848294841672}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.60536384583
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
get resource value 0.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=6.61907100677
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
14:54:37 -- ******* Post Equilibration Finished *******
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.646778800994783}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.7242515857571405}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -0.06521020362943544}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -0.35559404845918985}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.34379866500816786}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6720829590282642}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.530604224955421}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45412485533478403}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.784667770037778}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.8247210786018035}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.7988558893839293}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.7168553341918844}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6669909841957911}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.3692295265463683}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.3322892961629508}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.3770743428047672}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5337784978202011}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5654753640320735}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5519096199604037}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
14:54:57 -- collecting point 25
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.520093740944201}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5302329901107459}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.609900994253765}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5858249675015652}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5499497140314}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5349451834075287}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5174737520280663}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5064245625338457}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44907430475249105}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43057414814212397}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.42043710537472184}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4537838278254582}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4740881410543632}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46474853276532163}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4951675458153653}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5115954325800385}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5276225202274598}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5228071233973877}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48536326668995783}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4671438212109003}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46507201800594505}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4647847873837259}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4559659483843647}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47000324641537433}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46727172907175657}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
14:55:23 -- collecting point 50
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4588544882956907}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45903425252432833}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4520960851707044}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45924014768082216}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4336133954520692}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44114341383900707}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45164817342008895}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45004848848867}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.438972132323809}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4411576526666496}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4347173938541234}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.008069090055324898}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4391099134402346}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007731056858884936}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4361908507989279}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007755636313593315}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4348596440568981}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007766055677799246}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.438427243166059}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007784526084318902}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43662832693090176}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007614235593922419}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44348688931294294}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007612663625162515}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4442342466572344}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007694676830701413}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4386103503100864}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00771866887671322}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4375440920103501}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007658910996670777}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4389737312633875}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0076668927223009714}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45210136624301617}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007697555817283567}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4575607025255734}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007714095646610796}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4663627006936721}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007814331869840242}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4682880188539705}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007531210156232379}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
14:55:50 -- collecting point 75
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47244818192847743}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007399727810934533}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4706754994538049}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007367382381844074}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46983135850221874}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007331581850155785}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47066092925458464}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007364324538772684}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47651190349855815}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0071615754308411595}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.473039212326632}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00712850150719311}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47307997189200296}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006905510931115227}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46755244450887706}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0067311907749319925}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4724234110900258}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006689752059635397}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4787690716287632}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006699708367219115}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47546933965658106}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006704330173407815}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4751359751898209}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006546446424529077}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47314883888260467}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00657037450535105}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4749382053820322}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00657634805763527}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47206283707256597}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006715874556129935}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4679020456553585}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0066664175495488595}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4664422304729154}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006651845966015268}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46392510302651163}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006667714618386446}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4654853223328345}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006656608073653073}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46178872876980065}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006621861525000844}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46178717526722285}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006628497909922536}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4668791939091093}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00657993369711666}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4670034939644519}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006492967568321957}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4597195636726031}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006392176403061046}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4587216898111333}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0063860795549013725}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
14:56:16 -- collecting point 100
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4642818746167881}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006387373433727692}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4638192131918419}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006320156050997559}"
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4611064180413745}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006349462007460437}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4605471054339865}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006246024580720629}"
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4670366088862142}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006284752917585389}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4701757317448734}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006290910689555519}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47078691610343565}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006268049082853949}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46536519318237984}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00645916978863244}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4652999108536913}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006367759523648119}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4671267945764897}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006357196133509726}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.470027553613338}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006312263103248787}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46525690162952166}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006277152883664973}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46408453494155705}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006314737605334708}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4653368523104123}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006204933958327191}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4660287069398243}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006211527205855257}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46809452690142744}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006169481971190568}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4693795072142631}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006166964086421895}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4680273314690024}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006125405606335801}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46735871802438395}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00614451501193116}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46891439897072634}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006058322765292987}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46946289650251344}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00604239777855184}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.472088609468496}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006026201479992756}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4738069984237417}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00608681683362254}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47514758305464905}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00608539633408781}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47400242213004046}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00621903987168295}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
14:56:42 -- collecting point 125
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4757032090990772}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006198088933136047}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4734109252839122}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006256932947284111}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47622243469925957}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006243113374649444}"
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47510063115886153}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006260955264101604}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4769230075695354}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006275350186434459}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
set states for children of C. state=True
handle state [('C', True)]
update switch state C True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4782197309530381}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00619744973542955}"
State checksums do not match. Local:-1990985319 Remote:-110011688
State checksum failed
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4744461446957859}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006205510267788484}"
set states for children of B. state=True
set states for children of D. state=True
handle state [('B', True), ('D', True)]
update switch state B True args=() kw={'refresh': True} ncanvase=3
update switch state D True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47532996229172336}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006136379181041338}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4782397560728023}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006095394411979775}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47949231969918943}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006080190590508438}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47986131800989}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00604042135507394}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4778102681384147}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006061602610793199}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47871449805805183}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005973627482138946}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4754129655805795}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006024717855838478}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47386293894337855}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006018693248768287}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47466030490459793}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006068650906042072}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47527340116266764}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006023129469646759}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47425017596105695}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005979389504949328}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47431155892152704}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005998177892705145}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4750809974988139}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005959479883487824}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.477449819162759}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005932980114429221}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4759089263038228}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0059660264672251025}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.474480702095114}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005952948516976947}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47408543531345465}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005939439703197916}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47400222400346165}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005857868102852277}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
14:57:08 -- collecting point 150
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47082333217765343}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005821918595138749}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46851773501906907}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005874118175020645}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46566247580880177}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005886232285659379}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46573643830120953}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005851246018947065}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4700959671239047}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005881980863927644}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4708536668919214}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0058701724554355815}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4714351308401504}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005838487026554392}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4700070783126222}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005836733371294851}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4706418359764197}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005814857040881323}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4709653922518923}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005764874871119432}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47062412334360443}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005759388132778975}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47264241641147425}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005757937167006992}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47418714090182085}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005801791621695648}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4763372199874822}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005841890786242077}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4763623156806361}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005774072188817523}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.476045343064839}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0057364563955685155}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4758549738857634}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00570469460827167}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4770500667911421}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056739957631637365}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4785022377267623}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005701332209054351}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47988813592779084}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00572616451186538}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47779110321810375}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00572275587844841}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47787762669609707}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005701567362657444}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4769437122187686}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005731684797628756}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47770834934246503}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005721287045060883}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4798364821523587}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005739851912403075}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
14:57:35 -- collecting point 175
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47962672371111675}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005744035839711159}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48153212091695546}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0057471004373907736}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.483167033274218}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005769486292626683}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48356912361560406}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005813949655031379}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4836603824294318}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005778718813304453}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4834040003941816}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0057047649943233365}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4847764136672848}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00566180322611414}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4830886912600379}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005616553478632994}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48353629851554797}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005608119501945163}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4835111168787149}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005603307457354095}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4841498337533268}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005571240654509099}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4861203543960613}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005593518280187151}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4845895676893259}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005579930551257087}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48500259786106653}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005577663381947735}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48420457354944296}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005600902939113927}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4856625846077132}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005592683127701475}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48454830559086687}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00558423994318097}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4828186601333931}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005604715003918564}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48374464486370966}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005583693627681514}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4830061080454477}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005523659613510558}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4835435360880151}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005519619113434571}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48358812101315346}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005479831310774295}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4852933947826729}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005504808394634342}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4843425040487917}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005493054526096632}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48562323749652764}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005467501354196186}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
14:58:01 -- collecting point 200
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4855658718700489}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00540831493039541}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.485817602860883}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416611787764416}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4835687667757556}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005393468302079218}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4842987214200393}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005414889311535935}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4859715496666612}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00541803889776672}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48884556361684667}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005440544386140734}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4888755475399838}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005454858338001531}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4872609508754952}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055041139008340945}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48624111453389546}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005527610338751253}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48567391879663485}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005487838950316929}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4873399440504434}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005472039598915639}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4892738649631087}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005462921679561702}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4908507368925868}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00541242742008939}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49031875984939016}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054365923007175165}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49032870074021134}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005459164994545468}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4912003866086329}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00546773039360461}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49114503249362534}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005438219829762207}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49156350093991746}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005425060521099386}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4931026863127043}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005424340504893894}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49245487852476116}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005468890644622268}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4940746634208915}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055048817117629946}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49589358727303173}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005514685211563392}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49644736099516323}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00551758194300108}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49575024383177296}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005505010638220792}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4958330589582543}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005551609247084112}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
14:58:27 -- collecting point 225
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49864743354350055}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005507526267173872}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4996680219447625}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005520413651856358}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4981764022102321}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005529350413143614}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49938086583307434}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00557491379253999}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5003664582842613}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005595008831053926}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49987390669888315}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005579481304307494}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49840275663901884}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005561295377973204}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4998639332174722}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005568789197308019}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5009505207072686}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005539022275504397}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5016264563105759}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005546312000662847}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5014034997260823}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005550041683425129}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5017959407640389}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00555589408294641}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4999048049804988}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005585686597003162}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4994991605112639}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005556479689437425}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49804205267920415}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055551440613781184}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49923359318040056}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005574965998001792}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4991161775179333}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005577386038231206}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49861207471843844}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005547226019240028}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49934084735033285}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005525825446184077}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5012128646304783}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005494320032355968}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5017658658732436}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00551617421673805}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5030436030411052}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005515812601639902}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5034772632110249}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005483881588302551}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5030468387388558}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005473506325728377}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.502259334067942}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005470857386781086}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
14:58:53 -- collecting point 250
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.501978353171229}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005470470595780094}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5023911263424707}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005444279964275575}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.503406641466549}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054566978276692065}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5055388098756513}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005438042112474335}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5048380342738545}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054447864771903194}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5048085982633763}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005425985350228712}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5051254516357893}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005424907995550205}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5047132001742838}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005388999602535404}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5058863984805351}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005366430581318622}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5078727062641213}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005371260475182522}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5089509306913003}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005404711621939043}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5087565002195982}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005409943430565248}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5084292702151099}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005417032757356773}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5094587483114243}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054474242810040666}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5096426952211075}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005428681424496995}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5113018038378534}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005419782666458874}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5121108716879179}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005399093952333465}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5123121121814564}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005367131245665407}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5120854386049172}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005352404735345759}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5121118574776531}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005340254193484747}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5117944271835908}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005328263720073696}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5120902931725815}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005314130424081806}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5129689314417278}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005332314059689842}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5124947430651909}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053472548527392725}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5132169294275357}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005304621560333442}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
14:59:20 -- collecting point 275
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5138197523691497}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005344597636869371}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5152240988382017}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053356072872383165}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5152913766191123}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005306525788143813}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5162399300318123}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005302737078252272}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5165038488868714}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005294387323940744}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.51724181794007}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005312564355418021}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5174405005070295}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005310049062158953}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5171993604029419}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005320482199047789}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5166777747383167}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00533027557848994}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5169619642232612}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005306942859636766}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5182373814745558}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005316545096957571}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5194215925490844}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005338434909431494}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5200804318569436}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00536356022610174}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5202386810491417}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005353460626721401}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5206025381117185}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00536675932867688}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5219139944737929}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005383537874411301}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5238213924905453}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005355330844750049}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5249491439127378}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053717622380778755}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5251517597845137}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005366524367698824}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5258107175722126}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005365343652104021}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5262947779315481}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005353610310582868}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5266408810952021}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005319401389625674}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5261646560208495}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005335245100637134}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5263882416986776}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005333989921817804}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5264185501432563}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005336586453517508}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
14:59:46 -- collecting point 300
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5268791208205528}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005320652652219971}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.527484098181676}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005337219144172159}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5277722413213257}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005316898584878272}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5277037066303465}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053628956145507075}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5282795594794709}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005345477911435807}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5290229681694352}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005336309006204127}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.529432840350359}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005344945964590617}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.530911557345392}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005333416616688086}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5318277626903332}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005339628051302677}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.532448456947449}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005333709555569003}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5337202374923626}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005337446139702019}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5340220399250453}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005335028446882908}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5351097940130245}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005343998543744397}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5369494199416198}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005348608118564554}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5367666806273557}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005350922386363209}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5371351647007536}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053605296962723915}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.538116204347999}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005365801915005125}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5380429216661038}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053800962556311005}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5378642029057454}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005363630979204987}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5377289804299752}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005349322720589904}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5378082414970793}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005335232548484511}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5374351255052396}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005321361486703177}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5372764150770231}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0052947587902893835}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5373671221716445}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005281679745192846}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5382305595646453}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005303678855651413}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
15:00:12 -- collecting point 325
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.540140410214552}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005301013224724867}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.540964503393669}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005283650298368251}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5416069236211845}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0052902119437660084}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.542261972788737}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005280099297347113}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5425136528253482}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005271901531010968}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5427213087012777}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005258378357554304}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5440547228258616}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005245081162078479}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.545108837716346}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005267614654152309}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5462517987581539}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005314104782016126}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.547927637714049}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005336009129711887}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5481641140948303}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005332392445688761}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.548907600839178}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005330431664067603}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.548372482064432}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005324828052845989}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5490111758022913}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053209309873862125}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5500714248945182}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053290929552337555}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.549215322404714}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005310881707045363}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.550487812220618}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005318848240163687}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5510815002322291}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0052954934315118255}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5515618253291141}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00527263925930287}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.551099767401444}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005263904423664953}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5520293814826853}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005253550982718154}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5524493353847486}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005231484486412345}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5528960223261585}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005258771551144992}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5531268344331663}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005263260308760621}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5530571883926978}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0052624248517811265}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
15:00:38 -- collecting point 350
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5538384706257751}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005256438026435842}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.554677691474651}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005255438475333301}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5550331163688602}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005269200070811444}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5557000606760534}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005257646188950528}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5550798801006631}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005282426163279745}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5554789045255695}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00526864108196187}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5560273331398753}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005294265574459579}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5568116074472877}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005310852420201171}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5584996221649614}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005312196676111362}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5585070774226328}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053197881205737825}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5588626405750583}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005328596511235625}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5595852265263381}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005325740416779584}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5592701719977713}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005337180798958123}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5597637864594822}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005340148567774981}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5611023524758476}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005331728131483618}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5620680935573494}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005334447179305747}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5622925296945589}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053227070576835475}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.561582976203876}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005317407474276065}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5626201493875116}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005296402619722882}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5634155745641054}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005300807223844583}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5633695773027789}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005315826084811147}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5641864049254424}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005296114542170216}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5647249067953783}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005312359875292033}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5653751861885121}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053172011404393595}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5662609255242343}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005343263539281203}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
15:01:05 -- collecting point 375
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5664312908511155}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005356191236822849}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.566834014509213}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005359430669961705}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5681010648338054}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053715402136201695}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5685887898622126}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005380111290674245}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.568796871224051}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005385247520848677}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5690365915232523}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005378003404416013}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.56971663873983}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005387305306720885}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5706264374065113}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005376704643240314}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.571501422695861}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005396074260039928}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5716187087608464}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005410286805905675}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5723724332112006}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053912958967773}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5720441883604175}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005388895460036554}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5726371526060605}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005381955921492005}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5729569088872759}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005398542780541616}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5731729825165706}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054086582726759185}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5733417459287964}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005399339963989038}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5736164001899298}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005409017981676594}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5738912749946548}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005428430431750548}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5737231466415194}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415319430048314}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5735239124745477}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005406694274419405}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5742183199682034}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0053995502998207875}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5740993032232449}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005393849335010641}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5751040344946061}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00540527887655422}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.57593958401964}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005401989646671911}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5766876828839422}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005377295347524797}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12535676816004176}"
15:01:31 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.077
flush and close file /Users/jan/PychronDev/data/isotopes/85/6d1aa8-3e45-49ea-8231-e2493e728ec7.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/85/6d1aa8-3e45-49ea-8231-e2493e728ec7.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57074999]
H1 map mass to dac 34.2 >> 5.23979599104
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.23976513438) on H1
setting magnet DAC
current  : 5.879105
requested: 5.239765
Delta Dac: 0.639340
Checking detector protection. dv=0.63934
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.23976513438 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5773972072541602}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5603413782348594}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5627360043979679}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5805203526086452}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12223362280555672}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5697553887941051}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5728418596567106}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5738926038493555}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5764210151993319}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.571447660717011}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13130631469719087}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.574423477997895}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5717035503832719}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.573065549338329}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5706977564533753}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5740926837056828}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12866129170851912}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.576087108439473}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5778941085257109}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5794232651008917}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5821375545115712}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5820341677719819}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12071980764222004}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5798240640353001}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5800980575501815}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5811870898631852}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5807165737174145}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5844719500247584}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11828202538944355}"
15:02:14 -- collecting point 25
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5840747314862007}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5822617366195441}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.581700472614758}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5818287268896847}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5799193572536817}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1228346181605202}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5783557021181757}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5765288132426067}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5749297809572721}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5749259690803543}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5723156090553441}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1304383663588578}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5708813268917445}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.57277254529574}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5752288901046938}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5748179590439821}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5742539854818942}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12849998993230766}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5749161511073417}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5733286922739314}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5728728547858828}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5743488771390454}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5747241994205696}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12802977599363233}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5761623763010273}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.575676013397197}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.57572981155541}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5754875340183125}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5758546393141615}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12689933610004048}"
15:02:40 -- collecting point 50
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5759064096624495}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5764368594148891}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5759749431787952}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5748367589620336}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5739574018952348}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12879657351896714}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5733233654773506}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5759084338774395}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5770609248285679}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5775590704441763}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5770346258605714}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12571934955363048}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5764835016651794}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005414800252311438}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5764573379064725}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054148825618400495}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5770452400497432}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005414962216222577}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5775921383160905}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415039341894548}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5771971018398616}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00541511405738927}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1255568735743403}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5775279273644558}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415186473945692}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5777805860695413}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415256696061012}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5767338226420393}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415324821993784}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5761675309981902}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415390944222651}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5760234301874922}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054154551498651745}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12673054522670965}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5755506493625423}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415517521060768}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5755463510457969}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415578135321275}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5753812484031015}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415637065852324}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5747391534010781}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415694381848275}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5745760364191146}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415750148763254}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12817793899508736}"
15:03:06 -- collecting point 75
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5742400072713352}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054158044285605}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5745579352524439}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00541585727994203}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5748919281103545}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415908758560403}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5743866548034116}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415958917214202}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5742843946866967}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416007806028665}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12846958072750525}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5757147496911323}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416055472622766}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5754607189910567}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416101962263926}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5754873412514109}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054161473180114}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5763722333026493}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416191580849296}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5757542935301398}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416234789810099}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12699968188406213}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5758608826015607}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416276982089471}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5758426271688741}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416318193153044}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5759183233153999}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416358456835846}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5759855200942996}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416397805434947}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.576160323972318}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054164362697958655}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12659365144188395}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5760830733150601}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416473879393209}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5756152489002171}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416510662405995}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5751166985568814}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416546645788068}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5750218541923484}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416581855333968}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5742147487461811}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416616315740593}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12853922666802092}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5746074744005274}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416650050664974}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.574774815056127}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00541668308277843}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5745487536554256}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416715433817382}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5744563853861665}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005416747124631049}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5745372702300138}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054167781752262585}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12821670518418818}"
15:03:32 -- collecting point 100
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5750699320446295}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415302340435969}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5751019127061637}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415347080961918}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5747557138616538}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415390944222651}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5745942193881027}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415433955769584}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5744404205290999}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005415476140171384}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12831355488510202}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5746280713228311}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005414082983562107}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5741001538430932}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005414137117052623}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.574130595266156}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054141902387021944}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5735565385895005}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005414242376617515}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5733530740251229}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005414293557873837}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12940090138907895}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5732552905934967}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054143438085618644}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5733408314759864}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054143931538320885}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5737571457200925}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005414441617936773}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5738938503928253}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005414489224269693}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5737914045823936}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00541453599540379}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1289625708318083}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5735531321038485}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054145819531268595}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5734122844338205}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005414627118475393}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5736159863127175}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054146715117666866}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5729766619598777}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005412162162141248}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5730470630833466}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054122265232455806}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1297069123308553}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.461
flush and close file /Users/jan/PychronDev/data/isotopes/85/6d1aa8-3e45-49ea-8231-e2493e728ec7.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=7.92085406941 threshold=3
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x15f26be30>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x15f26be30>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x14b8672f0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57074999]
H1 map mass to dac 39.9624 >> 5.87914
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x125e26d70>
doing pc
starting peak center. center dac= 5.8791053783 step_width=0.0015
width = 0.0015
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87911 width=0.03000 (5.86411 - 5.89411)
Moving to starting dac 5.8641053783
setting magnet DAC
current  : 5.239765
requested: 5.864105
Delta Dac: 0.624340
Checking detector protection. dv=0.62434
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8641053783 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Wait until signal near baseline. tol= 0.0917476593801. timeout= 10
Peak center failed to move to a baseline position
_do_sweep sm= 5.8641053783, em= 5.8941053783, stm= 0.0015
calculated step values: start=5.8641053783, end=5.8941053783, width=0.0015, nsteps=21.0
setting magnet DAC
current  : 5.864105
requested: 5.864105
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8641053783 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.864105
requested: 5.865684
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86568432566 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865684
requested: 5.867263
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86726327303 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867263
requested: 5.868842
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8688422204 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868842
requested: 5.870421
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87042116777 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870421
requested: 5.872000
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87200011514 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.872000
requested: 5.873579
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87357906251 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873579
requested: 5.875158
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87515800987 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.875158
requested: 5.876737
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87673695724 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876737
requested: 5.878316
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87831590461 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878316
requested: 5.879895
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87989485198 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879895
requested: 5.881474
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88147379935 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881474
requested: 5.883053
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88305274672 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.883053
requested: 5.884632
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88463169409 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884632
requested: 5.886211
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88621064145 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886211
requested: 5.887790
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88778958882 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887790
requested: 5.889369
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88936853619 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889369
requested: 5.890947
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89094748356 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890947
requested: 5.892526
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89252643093 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892526
requested: 5.894105
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8941053783 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8712296267928288, 5.8788949574541514, 5.8865602881154739], [7.4529180784445135, 10.039318346348161, 7.4220465504046524], 5.8798568813018468, 10.039318346348161)
Failed to find a valid peak. No peak greater than 1.0. max = 0.809323778796
Failed to find a valid peak. No peak greater than 1.0. max = 0.0740563337636
Failed to find a valid peak. No peak greater than 1.0. max = 0.0183353939788
new center pos Detector(H1) (Ar40) @ 5.87889495745
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87892957792
update mftable H1 Ar40 5.87892957792 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.894105
requested: 5.878895
Delta Dac: 0.015210
Checking detector protection. dv=0.01521
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87889495745 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Failed to find a valid peak. No peak greater than 1.0. max = 0.809323778796
Failed to find a valid peak. No peak greater than 1.0. max = 0.0740563337636
Failed to find a valid peak. No peak greater than 1.0. max = 0.0183353939788
flush and close file /Users/jan/PychronDev/data/isotopes/85/6d1aa8-3e45-49ea-8231-e2493e728ec7.h5
finished measure script
executed snippet estimated_duration=568.532928, duration=635.703449965
jan_unknown400_120.py completed successfully
Measurement Finished
15:04:49 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
15:04:49 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.69412994385e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
15:04:49 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.366683959961
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
15:04:49 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
5031321232 connecting to database sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
create new session 5031321232
close session 5031321232
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4724807920
MassSpec Database Version: 16.0
close session 4724807920
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to bu-FC-J
setting aliquot to 7996
setting step to 
setting uuid to 856d1aa8-3e45-49ea-8231-e2493e728ec7
setting irradpos to bu-FC-J
setting extract_device to Fusions CO2
setting tray to 
setting position to 1
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 30.0
setting duration_at_request to 30.0
setting first_stage_delay to 30.0
setting cleanup to 30.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_unknown
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x15df640d0> len t=120
baseline Ar41. v=-0.205978861252, e=0.00534707716365
get signal data Ar41 H2
Get data signal Ar41 0.025+/-0.006 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x15df64290> len t=120
baseline Ar40. v=0.132402264319, e=0.00315709283002
get signal data Ar40 H1
Get data signal Ar40 0.576+/-0.009 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x15df64450> len t=120
baseline Ar39. v=-0.0565267497403, e=0.0046151904372
get signal data Ar39 AX
Get data signal Ar39 0.018+/-0.008 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x15df64610> len t=120
baseline Ar38. v=-0.0319131594176, e=0.00195989992023
get signal data Ar38 L1
Get data signal Ar38 0.0051+/-0.0022 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x15df647d0> len t=120
baseline Ar37. v=-0.0264473641949, e=0.00452992851802
get signal data Ar37 L2
Get data signal Ar37 0.062+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x15df64990> len t=120
baseline Ar36. v=7.53132189191e-06, e=3.49769926031e-06
get signal data Ar36 CDD
Get data signal Ar36 0.00519+/-0.00019 len t=400
bu-FC-J-7996 added analysis time 0.542596817017s
analysis added to mass spec database
mass spec save time= 0.553
persistence save - dvc
================= post measurement started
create new session 4939153776
close session 4939153776
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.809323778796
Failed to find a valid peak. No peak greater than 1.0. max = 0.0740563337636
Failed to find a valid peak. No peak greater than 1.0. max = 0.0183353939788
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-7996.json
add to repo msg=modified - -J-7996.dat.json
add to repo msg=modified - -J-7996.blan.json
add to repo msg=modified - -J-7996.inte.json
add to repo msg=modified - -J-7996.icfa.json
add to repo msg=modified - -J-7996.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_blank170/bu-FC/tags/-J-7996.tags.json
add to repo msg=modified - -J-7996.peak.json
add to repo msg=modified - -J-7996.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_blank170/bu-FC/monitor/-J-7996.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-7996.inte.json
add to repo msg=modified - -J-7996.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-7996.blan.json
commit message=<BLANKS> preceding bu-FC-J-7995
add to repo msg=modified - -J-7996.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x15ccfd110>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4939153776
add association Jan_blank170
get identifier "bu-FC-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x1415acf10>
close session 4939153776
================= post measurement finished
15:05:03 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
15:05:03 -- ******* Post Run Check Passed *******
15:05:03 -- Automated run bu-FC-J-7996 success duration: 719.701 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=12
update duration runid=bu-FC-J-7996, duration=719.701420784, md5=4c9e8ecc
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000231027603149
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.50339508057e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000101804733276
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.00011682510376
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000108957290649
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000112056732178
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.38961791992e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000123023986816
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000200986862183
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.41481781006e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=9.98973846436e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000111103057861
executed snippet estimated_duration=250.0, duration=0.030641078949
script duration name:sniffair_x2 seconds:250.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000182867050171
executed snippet estimated_duration=4.0, duration=0.00609803199768
Script duration 806.0
Run total estimated duration= 807.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:556.0
pump_ms in script context. using previous estimated duration
sniffair_x2 in script context. using previous estimated duration
script duration name:sniffair_x2 seconds:250.0
pump_extraction_line in script context. using previous estimated duration
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=213.652928, duration=0.000179052352905
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=7.70092010498e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000113964080811
executed snippet estimated_duration=0.0, duration=0.0033700466156
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
unknown120_60 in script context. using previous estimated duration
script duration name:unknown120_60 seconds:214.0
co2 in script context. using previous estimated duration
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.41753387451e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000127077102661
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000107049942017
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000133037567139
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000228881835938
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000125885009766
executed snippet estimated_duration=108.0, duration=0.0265758037567
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
cocktail_x1 in script context. using previous estimated duration
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
nruns=141 before=5.0, run_dur=43177.0, btw=6300.0
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
