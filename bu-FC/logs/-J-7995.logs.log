do run
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000197172164917
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=1.8835067749e-05
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.41074371338e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.01222229004e-05
executed snippet estimated_duration=0.0, duration=0.00225806236267
script duration name:co2 seconds:0.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000185966491699
executed snippet estimated_duration=4.0, duration=0.00114893913269
Script duration 556.0
Run total estimated duration= 557.000
run duration: 0:09:17
doing event level: 2
13:04:27 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4967310640
close session 4967310640
$$$$$ Clearing conditionals
adding conditionals CDDtrip
extract conditionals from file. /Users/jan/PychronDev/scripts/conditionals/CDDtrip.yaml
no attr for this modification cd={'extraction_str': '', 'attr': '', 'mapper': '', 'use_termination': False, 'start_count': 0, 'nskip': 0, 'window': 0, 'frequency': 1, 'teststr': '', 'action': 'Skip Next Run', 'ntrips': 1, 'use_truncation': False}
adding cancelation attr="Ar36" test="Ar36<0.002" start="60"
no attr for this truncation cd={'mapper': '', 'window': 0, 'frequency': 1, 'attr': '', 'teststr': '', 'start_count': 0, 'ntrips': 1}
adding termination attr="Ar40" test="Ar40>5000.0" start="1"
Invalid conditional kind="pre_run_terminations"
no attr for this action cd={'mapper': '', 'attr': '', 'start_count': 0, 'window': 0, 'frequency': 1, 'teststr': '', 'action': None, 'ntrips': 1}
Invalid conditional kind="post_run_terminations"
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run bu-FC-J-7995
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run bu-FC-J-7995
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
13:04:27 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.20715,0.17583,-0.13485,-0.03095,-0.00693,0.00211
13:04:27 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
13:04:27 -- ******* Pre Extraction Check Passed *******
=================================================================================
13:04:27 -- stopping status monitor
stop 4939519376
Status monitor stopped
Status monitor finished
13:04:29 -- starting status monitor
start 4939519376
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
start extraction
do extraction
Analysis started at 13:04:30.924915
Extraction Started jan_co2.py
13:04:30 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x12a13cd10>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.6968460083e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.29832458496e-05
executed snippet estimated_duration=120.0, duration=0.00211095809937
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.41074371338e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.0157091617584
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000119924545288
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
13:04:31 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
13:04:31 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=3
13:04:32 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
13:04:32 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
13:04:33 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
13:04:34 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
13:04:34 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
close name=--- desc=CO2 Laser to Felix
checking ownership. requestor=129.138.12.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
13:04:34 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
13:04:35 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=4.97340106964
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '') {}
setting motor "beam" to 
is blank. not heating
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=3
13:04:36 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
Join finished
block finished. duration 30.0711460114
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
Join finished
block finished. duration 30.0669589043
executed snippet estimated_duration=180.0, duration=65.5300869942
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 1
Extraction Finished
13:05:36 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
13:05:36 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.147042666178
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.8255 5.8791 5.9922 6.1654 6.2308 6.3936
Ar39     5.7247 5.7714 5.8846 6.0514 6.1159 6.2801
Ar36     5.4022 5.4404 5.5480 5.7103 5.7709 5.9312
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.035158395898
GetHighVoltage ===>> 4499.94659342336
start measurement
do measurement
L#=bu-FC-J analysis type=blank_unknown
Measurement Started jan_unknown400_120.py
13:05:36 -- ******* Measurement Started jan_unknown400_120.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09675
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.370811206739
GetParameter Source Current Readback ===>> 553.631386193005
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/06/c77f5f-fe0d-4a58-b384-503ec654f2ee.h5
flush and close file /Users/jan/PychronDev/data/isotopes/06/c77f5f-fe0d-4a58-b384-503ec654f2ee.h5
testing...
no interpolation path defined
executed snippet estimated_duration=568.532928, duration=0.000142097473145
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57071999]
H1 map mass to dac 39.9624 >> 5.87911
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning Ar40 (5.87907537847) on H1
setting magnet DAC
current  : 5.879075
requested: 5.879075
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87907537847 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x13e82a710>
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x14cc09590>"
Equilibration Started
13:05:38 -- ******* Equilibration Started *******
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
checking ownership. requestor=129.138.12.150
setting label 3 L1 Ar38
check software interlocks O
setting label 4 L2 Ar37
interlocks []
setting label 5 CDD Ar36
actuate state mode=None-script, software_lock=False
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x14cc09d10>"
doing actuation None-script close_channel True
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=3
13:05:38 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=3
13:05:41 -- OPEN   VALVE-R (Jan Inlet)
set_time_zero () {}
equilibrating for 12.0sec
sniff (12.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/06/c77f5f-fe0d-4a58-b384-503ec654f2ee.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
Equilibration Finished
13:05:53 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
State checksums do not match. Local:-612364762 Remote:1076709024
State checksum failed
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
13:05:54 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
13:05:54 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.00014591217041
executed snippet estimated_duration=4.0, duration=0.00122094154358
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000132083892822
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
waiting for write to finish
measurement finished
estimated time: 12.583 actual time: :12.697
flush and close file /Users/jan/PychronDev/data/isotopes/06/c77f5f-fe0d-4a58-b384-503ec654f2ee.h5
set_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "Ar41" to "('linear', 'SEM')"
set "Ar40" to "('Parabolic', 'SEM')"
set "Ar36" to "('Parabolic', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Parabolic', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal.yaml
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 400}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/06/c77f5f-fe0d-4a58-b384-503ec654f2ee.h5
measuring signal. ncounts=400
Close R ===>> OK
"signal" increment series count="2" fit count="1" regressing="True"
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=3
13:05:55 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
starting measurement
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=3
13:05:55 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.8743481187759659}"
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=3
13:05:57 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=3
13:05:57 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -0.14838820078827247}"
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=3
13:05:58 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -6.364051401974665}"
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=3
13:05:58 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=3
13:05:59 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -1.8159122552334646}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -0.5554243951214619}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.3539249897
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
get resource value 0.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=6.36837506294
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
13:06:01 -- ******* Post Equilibration Finished *******
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -3.4932062924631766}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -2.8061809147938}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -1.1309594057502295}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -0.49629587023630073}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -0.7223384149340679}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -0.7054917694305138}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': -0.18670079606065904}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.10154306622021969}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.1312981247744286}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.40032587194651237}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.485901859644699}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.7448685830658152}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.8007789517235836}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.7698424919171977}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.7090979258491412}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5970424887832794}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5238073899762357}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.519995657273937}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48727307799602226}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:06:20 -- collecting point 25
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4528879261889648}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4672536158554048}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.456555729323611}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4192132581731003}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45735130171411387}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46655490946508005}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49249576851863397}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4976940651528442}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.516736671593017}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4868268024353911}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4591323454422137}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47967059152127534}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49466331333208446}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46407102057242444}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44911871034912}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45326795834103617}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44654560510380714}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4622282699372734}"
set states for children of Q. state=False
handle state [('Q', False)]
update switch state Q False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4652275614021337}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46367326309431767}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
set states for children of D. state=False
set states for children of I. state=True
handle state [('D', False), ('I', True)]
update switch state D False args=() kw={'refresh': True} ncanvase=3
update switch state I True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44918049439170504}"
State checksums do not match. Local:-869564398 Remote:611344307
State checksum failed
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44382286015626315}"
set states for children of B. state=False
set states for children of W. state=True
handle state [('B', False), ('W', True)]
update switch state B False args=() kw={'refresh': True} ncanvase=3
update switch state W True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.42694096619363586}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.41519057698623363}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4151364461523124}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:06:47 -- collecting point 50
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4012651408329584}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4007122775045181}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.41477477335299007}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4151786323578871}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.41683251035286806}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.432677153324334}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44802335860620535}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43848220413081596}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4444061519553755}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.444744416326435}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4435436224129281}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.009380199355584467}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4473378168220361}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.008944424803737585}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4456944706459587}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00858122574212561}"
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4397486251852477}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.008280629105222377}"
State checksums do not match. Local:611344307 Remote:-2143241606
State checksum failed
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4319748069812016}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.008394202095044297}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.421493543489209}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.008183180386802354}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.42779071550323733}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007877709241331647}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4180892986694419}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007885063151665424}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.42213392423252993}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007826662854794723}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4146053053008737}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007801792753305379}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4189434604662339}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007976184086960795}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4155770449761873}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007813457345797773}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4172623385243355}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007500292797439088}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4180601430069423}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007254506262461929}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.41501522813743275}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007067039198936926}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:07:13 -- collecting point 75
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.41584681697850423}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007006343658119353}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.41664609578639444}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006919071722157153}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4263060731451327}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006897272021776391}"
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4229653670788125}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006759998120374985}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.41874192661453136}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0068463887701018}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
set states for children of C. state=False
handle state [('C', False)]
update switch state C False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4162254382323044}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00691796185765865}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4171126481142422}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006855757318999379}"
set states for children of P. state=False
handle state [('P', False)]
update switch state P False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4109449676243271}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006941750298661507}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.40869847554899064}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006871379656865066}"
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4087994151724992}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006704646319725071}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.41534361756990734}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0067278856722418606}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4219039696449839}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00681797206757927}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.42506771521282405}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006774813378498056}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4226675203752851}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00674490346333153}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4183621150317446}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006841374261461855}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.42083493581973885}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006968358846888339}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4206018631413452}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006888684800809395}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4230029072077006}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007053317394467867}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.42636962081142293}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007141966415235759}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4278389236594389}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006984930430129475}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43277826238918427}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007005793298528694}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4346508631166768}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.007121752452752566}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4358035485259336}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00700089504792151}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43547886030938665}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006976822735669438}"
State checksums do not match. Local:-1891236928 Remote:610848153
State checksum failed
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43881208287293416}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006883310953799192}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:07:39 -- collecting point 100
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43626035172806565}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006785892778423552}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43915233046690194}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006647961506309903}"
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4393154982987836}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006769994323674279}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43946716133144814}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00674930393365409}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43441849744614236}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0067273094185055825}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.428889901984598}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006677727878965465}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.429481277355947}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006612434402465836}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4277463113740798}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006559058709211585}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4325102962924332}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006659940411417682}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43367245696174317}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006532083190158853}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43376400379275415}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006429863561167633}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4316102544818342}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006342816064487225}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43501106869508877}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006309502063416124}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43999800733868777}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006230024643972423}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4445530669448323}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006233565603694344}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4451851248536167}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006342309294704241}"
State checksums do not match. Local:-1731030918 Remote:610848153
State checksum failed
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44801331893178253}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006280806474264845}"
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4441541709860187}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006155696463963737}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4428919854753317}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006150335591405537}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4420593050045909}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006136696748589096}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4456346723165867}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006158682040229596}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44948379127784455}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006177351047309217}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45414962747560383}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006241964112862504}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45271531399785314}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006258097318865023}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45234266384846156}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006360039329722203}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:08:05 -- collecting point 125
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45096147601919934}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006350550451746119}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45015705674430817}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00636663947242484}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44942870296764936}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006412494837258374}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44824156716849295}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006374580467216844}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4444521073555514}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006305570566565695}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4423573381210507}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006354766801666795}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4441391525208832}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006385722633204826}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4434912372936213}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006375081411661643}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44266605329966946}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0063633953906633055}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4458107924004995}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006338603596634206}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44743124086127395}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006289829319468661}"
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4470733117617267}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006225188983090693}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44625731726014106}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006116730383233058}"
set states for children of X. state=True
handle state [('X', True)]
update switch state X True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4436012060167348}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0061546977451790745}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4433233604436575}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006148153901787932}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4406400824430695}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00620342111195184}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.440669737977087}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00618552389474315}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4425408345247527}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006262400541159361}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4415547606015596}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006293559427739852}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4371737736798058}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00622792051069839}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4339289243422465}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006214135693262211}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4314288647874893}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006167688843751266}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4327230090648412}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006239862826750428}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43594604780448065}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006216225186720342}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44003144348648326}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006208375222346296}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:08:32 -- collecting point 150
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44039597546108644}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006194472024617387}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4387622611439628}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006123942894196543}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4384993143699041}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006107431766551488}"
set states for children of X. state=False
handle state [('X', False)]
update switch state X False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44060800496757957}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006065713483891307}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4424254427177907}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006080168633637593}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4416297863659755}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006171163683766894}"
State checksums do not match. Local:610848153 Remote:-1891236928
State checksum failed
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4435637169798754}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006098968694685131}"
set states for children of W. state=True
handle state [('W', True)]
update switch state W True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.440575255118125}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0060688626228982065}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44070272619051276}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006039528271207892}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4415157602091392}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006025170364984271}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44243215671205605}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006128098638731329}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4415712626687095}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006078921983301833}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44440769360642607}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006013206385095262}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.443540818518373}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005996283253785831}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44223620288173127}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005974832125653896}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43946087353857266}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006021159152197083}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4380654603482591}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006018992964039944}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4373188012680501}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006011483108200302}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.438923642999522}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005972701692201153}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4397944520316496}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005943961692317344}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.440317260544667}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005907370864383913}"
set states for children of W. state=False
handle state [('W', False)]
update switch state W False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4409027780522706}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005940478683826732}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4415628666155751}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005962212284093207}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4412493292241967}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.006019573599521111}"
State checksums do not match. Local:610848153 Remote:855128171
State checksum failed
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.43964742836172255}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0059557284918153215}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:08:58 -- collecting point 175
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44241283356322747}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00594846789433086}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44550290467831855}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00597766064711289}"
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44448142669521506}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0059797786909324396}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4435502893202594}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005988908417440657}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4454715847808445}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005976507491015007}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4464408014481943}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00597978585726981}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4479459220291908}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005970090878057094}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44631707675714793}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005905144820122342}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4449857668077023}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005889623408917689}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4457192578668564}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005916597515345777}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44465268578411554}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005876078505922113}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4436513912034794}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005833164145817815}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44317272478574177}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005810704251472416}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4441893399339807}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005814958147297843}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44489852228072435}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0058480112383938855}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4460166500150693}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0058120441884211}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4463557570292106}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0058322704934250956}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4468832719203557}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005825197885875138}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.44827140584812797}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00583584085118668}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4480703257293479}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005845188092537299}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4488301063840642}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005856867971629745}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4493458158062126}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005853037154931507}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4498613469527549}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0058556898477508754}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4499672264087904}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0058086096676182595}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4517034085610441}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005815225051888986}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:09:24 -- collecting point 200
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45188644287107027}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005800152775010328}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4531350630567529}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00576123435794674}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45430472284700096}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005757585124428189}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4556648380939815}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005804071754072611}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.456541567489567}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005787262981129831}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4568654348733182}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005753989294288994}"
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4569646499760637}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005741571051669478}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.45717350901285037}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005768563589163378}"
set states for children of C. state=True
set states for children of B. state=True
set states for children of D. state=True
handle state [('C', True), ('B', True), ('D', True)]
update switch state C True args=() kw={'refresh': True} ncanvase=3
update switch state B True args=() kw={'refresh': True} ncanvase=3
update switch state D True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4595431702934134}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005803393714098074}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46056551016401803}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005800215396038847}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
set states for children of P. state=True
handle state [('P', True)]
update switch state P True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46128294038151285}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005793318186399712}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4636509744418229}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005738108128597049}"
set states for children of I. state=False
set states for children of Q. state=True
handle state [('I', False), ('Q', True)]
update switch state I False args=() kw={'refresh': True} ncanvase=3
update switch state Q True args=() kw={'refresh': False} ncanvase=3
refresh_canvas_needed fired
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4660730691155437}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005786706032412571}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.46874117108658586}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005753358968927114}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4701871166412416}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005752392980009054}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4708579987442367}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005716549181325924}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.471640837344653}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0057438456555824165}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47175759276497553}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005763114849530697}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47352187195628415}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005759449916554852}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4753471971143084}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005727967381625162}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4768005664272016}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00570644897236886}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.47871144925260023}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005676352483194909}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.480651266560957}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005665044387489874}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48285685601240225}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005662654607788158}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48208122831494427}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056687269332946905}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:09:50 -- collecting point 225
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48464001272688906}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005638779365695833}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4852400007369131}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005650559129645349}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48599573502795446}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00563520727611175}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48731072491643457}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005637370473402265}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4884685134785417}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005633226378374954}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4894797968431883}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005637345578448995}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48920102704578095}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005615290590152374}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.48878237116741796}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005633220147176508}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4891434893953046}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056527079588343685}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49087667856435535}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056346381619203365}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4928037912962385}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005641835970860572}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4922995165995335}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005675827822148999}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4927195600965265}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0057215856165554815}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49324684745991787}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00569128339431334}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4932686095560279}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005705157764552489}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4939363220932397}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005731432638464998}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4945882253963447}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0057587748368179035}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4952244869325346}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005779115042808823}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4965587607595885}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0057609450377329955}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4967586627435323}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005737738409337033}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.497914318885573}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005675638071279708}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49777276663971526}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056756594916169785}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4984873587292412}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005701177667286931}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.49949873111542487}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005681277171024436}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4998961725920936}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005689984922218645}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:10:17 -- collecting point 250
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.4998787155620683}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005674877209476807}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5001315309712234}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005634505968338498}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5013449428545635}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005587749649276596}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5022511359772716}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005595302390142673}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5035977537680403}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005589637469968906}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5036079701261788}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005556410304621692}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5048796968563047}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005546422114478315}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5061835738252056}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005556177727597249}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5070045785561046}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005535750302164302}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5077861822453525}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005552363694138163}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.507736660142273}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005560678930495335}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5085719364874344}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005563471206744883}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5103883119765846}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055657865273908815}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5120931817752419}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005567644284042223}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5138288388043306}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005571444042911463}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5128944654504766}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055439304225764945}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5149698775467086}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005557197879432746}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5157473395294386}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00551094680501311}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5156879049875547}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054661161850946645}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5162045452028826}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005501681244218594}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5173705530054311}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005503208506612044}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.518648558810353}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005476736324683}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5183622453628196}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005466982026718948}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5188835450850533}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005425369630655296}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5193175697673731}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054530989471539395}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:10:43 -- collecting point 275
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5212557428249667}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00545241098938403}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5220253661572526}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005435723458783146}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5226745538804873}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054551729124249744}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.525141076274628}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005464717152507892}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5255380305332963}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005498015393133999}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5268066970815573}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005492286374462156}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5270279232521696}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005490860672940061}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5267730056269171}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005500125683285866}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5268282079391986}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005484814642315674}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5280098028092097}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005471929420411034}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5297126575764232}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005487266681845657}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5308447161816616}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005471704785155992}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5318102425039354}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005477796428022673}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5325980166424822}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054982950585477095}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5330163480642285}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005494474434367084}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5342666566014014}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005490504090280542}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.534097777360921}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005490594199930683}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5341383449743904}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005486219396189965}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5353527299852742}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005475474059828799}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5356675338058214}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055083710254785374}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5365927436001281}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005477917204541913}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5375108376715378}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005493466898842601}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5387727255994319}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005493883597135478}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.53988658696888}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005461403443610307}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5408563274335971}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005476448616402225}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:11:09 -- collecting point 300
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5413730156557963}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00547859743496201}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5413032833053136}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005462300589070637}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5413816244901832}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005452310270836847}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5424930078020342}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00547034707633169}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5428309031374686}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005489516135021318}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.54391917265611}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054879968399281715}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5451041847205487}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005464589302479952}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5468608027280324}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005510408085400301}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5487855452789012}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005540774328097659}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5487426124944412}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005548454436308743}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5496997721374299}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005565304427307916}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5512964002299002}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055697380190101705}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5517411508956727}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005541046242814916}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5541135496908247}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055494162237452556}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.556219632777015}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005545795373269962}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5567756502882306}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055705352186125115}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5577830331657891}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005543089191124276}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5579688338988827}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005565285183184434}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5589633479261711}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005569597982718529}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5586602723919629}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005580986208522624}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5587054721045384}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005569375373404858}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5603417248668062}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005567144433243557}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.561276123411564}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005538828634268452}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5615314304694247}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005546143126977429}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5626465125547917}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00553645655241732}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:11:35 -- collecting point 325
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5638651129724437}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005521334055421196}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5652447484938878}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005499151507986573}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5662421183715503}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005488301814869112}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5672604255813897}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005501046003711073}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5679860025013374}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005502359576843341}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5696429986974993}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00551057066365345}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5707977432897853}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005509359190536561}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5711854810596928}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005518628941684505}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5713351399279241}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00551851148989687}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5720515767872743}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00554819684866938}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5735916997781415}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00555209554639832}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5748761846996033}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005541602330989196}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5766876016339033}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005550402944807018}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5791011439015274}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005548252970256758}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5810184406659539}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00553204947236704}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5822598529063743}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005523006017507645}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5828711260414802}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005527775151438261}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5846601732183395}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055184468657644}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5861822677313527}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005512583817961727}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5864720825819165}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005515185813965266}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.587489718892367}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005525972432050138}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5886881771124916}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005517614698501371}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5902257805958787}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005502537819417665}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5920161977434659}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005502793096572319}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5925764255145815}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005496131820758863}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:12:02 -- collecting point 350
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5933886961224859}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005502785622727049}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5933104456576974}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00551567766511427}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5927169946180076}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055031480784198585}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5941235164010256}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005492414675161729}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5961138915859205}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054932864773167035}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5973010499300015}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005533244306750686}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5976540593620803}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005521233438448173}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5985892216639951}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005510974782781297}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5982266375492065}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055072810248625445}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.5999575522551484}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0055261069744251745}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6018169401115651}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00550714795020017}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6035957935748177}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005515799271877303}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6050599028915541}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005520800622059257}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.605390710465116}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005527047432779667}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6059738814703324}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005532910576676182}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6066135066124011}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005528899642938872}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6072626384762394}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00552321164814561}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6083624587175565}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005530058200072818}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6083987432714422}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005534941017780082}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6093111082311679}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005489480956235096}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6099174592744383}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005502692168422454}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6110405124121803}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005482746707429169}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6128365502578121}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005477077108033799}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6143045959766663}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005479082998179371}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6149252477329983}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005474697651316854}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:12:28 -- collecting point 375
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.61616684844981}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00548556360234198}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6174528936867929}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005471514498480122}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6180530710810352}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005465268420962633}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6195016744443897}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054787318583515805}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6203763276554624}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005496187890606062}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6212265135049699}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054753024018509315}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6217367432869069}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005477329442495096}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6222071965482333}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005461145786159264}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6231135627210356}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054586510205788955}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6240607383413957}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005490278952607193}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6256863612608453}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005511991172538215}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6258489122465263}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005493014122677616}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6262194581869517}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054920430434255325}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6267486754588434}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005510022668837106}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6290573505153405}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054995125019216455}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6301804199044649}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005511002279801866}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6319163575201783}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005504540236422145}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6325019796467819}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00550241782307478}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6329275776754694}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005491489211397979}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6344947924779557}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005495089641216627}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6356678517609508}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005481165376096771}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6365182524277913}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005474592580669892}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6371002737592977}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005470875522747504}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6378490976131839}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005457108683623475}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.639782688734468}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0054548910756418425}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15514650881454406}"
13:12:54 -- collecting point 400
waiting for write to finish
measurement finished
estimated time: 419.430 actual time: :420.394
flush and close file /Users/jan/PychronDev/data/isotopes/06/c77f5f-fe0d-4a58-b384-503ec654f2ee.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 120}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/06/c77f5f-fe0d-4a58-b384-503ec654f2ee.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57071999]
H1 map mass to dac 34.2 >> 5.23976599104
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
positioning 34.2 (5.23973513455) on H1
setting magnet DAC
current  : 5.879075
requested: 5.239735
Delta Dac: 0.639340
Checking detector protection. dv=0.63934
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.23973513455 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=120
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.641524929082907}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6454026856990651}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6386977880302054}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6349398609718009}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.16173157692565024}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6278091924215194}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6281913819611726}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6253486674280778}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6322765789529011}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6357837568045717}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.16088768109287946}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6379952431528152}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6398773248458864}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6411812048159536}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6428701244364909}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6478915366064738}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14877990129097732}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6498942652040527}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6523356194451219}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6552272333221234}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.654060847000547}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6544845367772396}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14218690112021154}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.652666924783742}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6552509797738432}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6533290239708592}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6536148654731013}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6541945899519088}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14247684794554225}"
13:13:37 -- collecting point 25
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.654000969612996}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.656591822534869}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.657234183265272}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6589967547743593}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6604670801737583}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13620435772369277}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6602128046296469}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6603606423751778}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6596951927083697}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6598425240448931}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6589551737526442}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13771626414480692}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6582147022140998}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6581624982173603}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6597971350893186}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6608865487630425}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6604718054931789}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1361996324042722}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6605381410384087}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6598735358693301}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6607193482841797}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6623662285683053}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6630798008108528}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13359163708659827}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6629190516400363}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6626612605342536}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6615532014490051}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.661840001057545}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6620778398818232}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13459359801562787}"
13:14:03 -- collecting point 50
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6631204331871324}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6625635944063931}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6622714672239542}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6631404503148739}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6621368939156304}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13453454398182071}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6618593455243595}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6611321742010328}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6613999146257677}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6617532508957744}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6622871019304484}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13438433596700275}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6622298714328121}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056769610902570695}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6636703623051039}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005677125709314293}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6645618437382883}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005677285018079348}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6643202612544377}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005675048373592189}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6649448837061844}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005675235162328994}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13172655419126666}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6659515550983238}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00567541620372005}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6661556801199263}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005675591759008348}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6660662804675995}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056757620738402785}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6657408321929537}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005675927379412447}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6661879291712889}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056760878935187544}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1304835087261622}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6654647880136617}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056762438215077395}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6644271844153875}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005676395357159006}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6646901518526439}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005676542683486627}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6653158634779187}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005676685973476505}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6649521067507295}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005676825390763953}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13171933114672166}"
13:14:29 -- collecting point 75
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6638648518112373}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056769610902570695}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6640816624649568}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056751112919035335}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6649016209274434}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056752657277586525}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6650257007872998}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00567541620372005}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6647391001807083}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005675562870163438}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13193233771674287}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.66550950879735}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005675705869945742}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6662423447708512}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005675845338869222}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6665449442679441}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005675981406111643}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6666532502735193}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00567611419462533}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6666122443814104}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056762438215077395}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1300591935160407}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6669184777598832}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005676370398345856}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6662123684006537}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005676494031536575}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6669367522032315}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005673152145831051}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6681769590490555}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005673309540227831}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6676959080495073}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005673463397671875}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12897552984794383}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6672649387467102}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005671940208979835}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6672140711810918}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005672105732537723}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.667522229749183}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005670630413873056}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6672316519741001}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005670806461602891}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6673222631482247}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005670978763636346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12934917474922641}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6664243868308712}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005671147438258571}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6660092271571352}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005671312598826166}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6664206603698164}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056714743540212335}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6664357367541257}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.00567009580362702}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6664409870153469}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005670266581900966}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13023045088210422}"
13:14:55 -- collecting point 100
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.666652059563546}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005670433944609433}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6667942230223652}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056705979932048615}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6669417864917244}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005670758825161164}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6668771597557143}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005670916534166858}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6671595389302174}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005671071210307059}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12951189896723375}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6668834584676964}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005671222940235065}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6672682520029422}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005671371807334241}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6668952486478181}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005671517891870815}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6669521510797183}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005671661271138193}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6667094570025327}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005671802019593326}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12996198089491845}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6668635446088066}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005671940208985639}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6665640851114317}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005672075908478991}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6669283474197031}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.0056722091847671045}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6675530619106486}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005672340102182862}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6675796386730547}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005672468722801851}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12909179922439637}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6671916630989346}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005672595106540511}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6670850091606947}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005672719311249194}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6671426431043008}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005672841392800463}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.6676701527411103}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005672961405172897}"
testing Ar40>5000.0
evaluate ot="Ar40>5000.0" t="Ar40>5000.0", ctx="{'Ar40': 0.667784562960684}"
testing Ar36<0.002
evaluate ot="Ar36<0.002" t="Ar36<0.002", ctx="{'Ar36': 0.005673079400530669}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12888687493676715}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.116
flush and close file /Users/jan/PychronDev/data/isotopes/06/c77f5f-fe0d-4a58-b384-503ec654f2ee.h5
activate_detectors ('H1', 'AX', 'L2', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=10.4827433847 threshold=3
peak center started
setup peak center. detector=['H1', 'AX', 'L2', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1362bd9b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1362bd9b0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x129c2acb0>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x119ae0530>]
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57071999]
H1 map mass to dac 39.9624 >> 5.87911
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4499.94659342336
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x125e26d70>
doing pc
starting peak center. center dac= 5.87907537847 step_width=0.0015
width = 0.0015
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87908 width=0.03000 (5.86408 - 5.89408)
Moving to starting dac 5.86407537847
setting magnet DAC
current  : 5.239735
requested: 5.864075
Delta Dac: 0.624340
Checking detector protection. dv=0.62434
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86407537847 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Wait until signal near baseline. tol= 0.119537686909. timeout= 10
Peak center failed to move to a baseline position
_do_sweep sm= 5.86407537847, em= 5.89407537847, stm= 0.0015
calculated step values: start=5.86407537847, end=5.89407537847, width=0.0015, nsteps=21.0
setting magnet DAC
current  : 5.864075
requested: 5.864075
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86407537847 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.864075
requested: 5.865654
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86565432584 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865654
requested: 5.867233
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86723327321 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.867233
requested: 5.868812
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.86881222058 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868812
requested: 5.870391
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87039116795 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.870391
requested: 5.871970
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87197011531 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871970
requested: 5.873549
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87354906268 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873549
requested: 5.875128
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87512801005 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.875128
requested: 5.876707
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87670695742 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876707
requested: 5.878286
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87828590479 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.878286
requested: 5.879865
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87986485216 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879865
requested: 5.881444
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88144379953 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881444
requested: 5.883023
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88302274689 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.883023
requested: 5.884602
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88460169426 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884602
requested: 5.886181
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88618064163 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.886181
requested: 5.887760
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.887759589 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887760
requested: 5.889339
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.88933853637 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.889339
requested: 5.890917
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89091748374 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890917
requested: 5.892496
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.8924964311 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892496
requested: 5.894075
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.89407537847 ===>> OK
Magnet settling time: 2.097
Magnet settling started None
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8712597472099795, 5.878925077871302, 5.8865904085326246], [9.6943166380057768, 13.095892692249883, 9.7258065482616018], 5.8814501279715019, 13.095892692249883)
Failed to find a valid peak. No peak greater than 1.0. max = 0.997855906361
Failed to find a valid peak. No peak greater than 1.0. max = 0.0843989313506
Failed to find a valid peak. No peak greater than 1.0. max = 0.0189608422942
new center pos Detector(H1) (Ar40) @ 5.87892507787
GetHighVoltage ===>> 4499.94659342336
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87895969851
update mftable H1 Ar40 5.87895969851 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.894075
requested: 5.878925
Delta Dac: 0.015150
Checking detector protection. dv=0.01515
Checking detector "CDD". Protection Threshold: 0.8 (V)
SetMagnetDAC 5.87892507787 ===>> OK
Magnet settling time: 0.500
Magnet settling started None
Magnet settling complete
set_dac. change=True
Failed to find a valid peak. No peak greater than 1.0. max = 0.997855906361
Failed to find a valid peak. No peak greater than 1.0. max = 0.0843989313506
Failed to find a valid peak. No peak greater than 1.0. max = 0.0189608422942
flush and close file /Users/jan/PychronDev/data/isotopes/06/c77f5f-fe0d-4a58-b384-503ec654f2ee.h5
finished measure script
executed snippet estimated_duration=568.532928, duration=635.303002119
jan_unknown400_120.py completed successfully
Measurement Finished
13:16:12 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
13:16:12 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.88486480713e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=3
13:16:12 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.373588085175
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
13:16:12 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
5221696528 connecting to database sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
create new session 5221696528
close session 5221696528
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 4724807920
MassSpec Database Version: 16.0
close session 4724807920
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to bu-FC-J
setting aliquot to 7995
setting step to 
setting uuid to 06c77f5f-fe0d-4a58-b384-503ec654f2ee
setting irradpos to bu-FC-J
setting extract_device to Fusions CO2
setting tray to 
setting position to 1
setting power_requested to 0.0
setting extract_value to 0.0
setting duration to 30.0
setting duration_at_request to 30.0
setting first_stage_delay to 30.0
setting cleanup to 30.0
setting comment to 
setting irradiation to NoIrradiation
setting level to A
setting irradiation_level to A
setting sample to blank_unknown
setting material to Blank
setting project to REFERENCES
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment:  %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x1437e8350> len t=120
baseline Ar41. v=-0.201704282226, e=0.00420759518003
get signal data Ar41 H2
Get data signal Ar41 0.021+/-0.006 len t=400
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x1437e8450> len t=120
baseline Ar40. v=0.128211270093, e=0.00313215124064
get signal data Ar40 H1
Get data signal Ar40 0.684+/-0.011 len t=400
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x148a1f550> len t=120
baseline Ar39. v=-0.0794177359866, e=0.00484333925259
get signal data Ar39 AX
Get data signal Ar39 0.061+/-0.009 len t=400
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x153585b90> len t=120
baseline Ar38. v=-0.0308449948251, e=0.00187598178457
get signal data Ar38 L1
Get data signal Ar38 0.0140+/-0.0022 len t=400
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x14378e950> len t=120
baseline Ar37. v=-0.0254483274937, e=0.00466768860053
get signal data Ar37 L2
Get data signal Ar37 0.060+/-0.005 len t=400
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x152d70b90> len t=120
baseline Ar36. v=1.38074234486e-05, e=4.36492590337e-06
get signal data Ar36 CDD
Get data signal Ar36 0.00548+/-0.00020 len t=400
bu-FC-J-7995 added analysis time 0.553378820419s
analysis added to mass spec database
mass spec save time= 0.580
persistence save - dvc
================= post measurement started
create new session 4939153776
close session 4939153776
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.997855906361
Failed to find a valid peak. No peak greater than 1.0. max = 0.0843989313506
Failed to find a valid peak. No peak greater than 1.0. max = 0.0189608422942
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - -J-7995.json
add to repo msg=modified - -J-7995.dat.json
add to repo msg=modified - -J-7995.blan.json
add to repo msg=modified - -J-7995.inte.json
add to repo msg=modified - -J-7995.icfa.json
add to repo msg=modified - -J-7995.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_blank170/bu-FC/tags/-J-7995.tags.json
add to repo msg=modified - -J-7995.peak.json
add to repo msg=modified - -J-7995.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Jan_blank170/bu-FC/monitor/-J-7995.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -J-7995.inte.json
add to repo msg=modified - -J-7995.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -J-7995.blan.json
commit message=<BLANKS> preceding ba-01-J-2484
add to repo msg=modified - -J-7995.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x13fe56ef0>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4939153776
add association Jan_blank170
get identifier "bu-FC-J"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x14944ef50>
close session 4939153776
================= post measurement finished
13:16:25 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
13:16:25 -- ******* Post Run Check Passed *******
13:16:25 -- Automated run bu-FC-J-7995 success duration: 717.417 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=39
update duration runid=bu-FC-J-7995, duration=717.416846037, md5=4c9e8ecc
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=213.652928, duration=0.000287055969238
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.69412994385e-05
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.00814819336e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000245809555054
executed snippet estimated_duration=0.0, duration=0.0120120048523
script duration name:co2 seconds:0.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000174999237061
executed snippet estimated_duration=4.0, duration=0.00271010398865
Script duration 214.0
Run total estimated duration= 215.000
unknown120_60 in script context. using previous estimated duration
script duration name:unknown120_60 seconds:214.0
pump_ms in script context. using previous estimated duration
co2 in script context. using previous estimated duration
script duration name:co2 seconds:0.0
pump_extraction_line in script context. using previous estimated duration
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=8.20159912109e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000124931335449
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000109910964966
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000114917755127
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000100135803223
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000163078308105
executed snippet estimated_duration=108.0, duration=0.0269069671631
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.00105285644531
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=6.79492950439e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000125885009766
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000128030776978
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000108003616333
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=7.10487365723e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000123977661133
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000108003616333
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.79492950439e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000472784042358
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.000119924545288
executed snippet estimated_duration=250.0, duration=0.0258929729462
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
cocktail_x1 in script context. using previous estimated duration
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
sniffair_x2 in script context. using previous estimated duration
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown120_60 seconds:214.0
script duration name:co2 seconds:0.0
Script duration 214.0
Run total estimated duration= 215.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown120_60 seconds:214.0
script duration name:cocktail_x1 seconds:108.0
Script duration 322.0
Run total estimated duration= 323.000
nruns=136 before=5.0, run_dur=39842.0, btw=6075.0
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
